---
# install basic stuff
- name: install rng-tools
  yum:
    name: "{{ item }}"
    state: present
  with_items: [ rng-tools ]
  become: true
  when:
   - ansible_os_family == 'RedHat'
   - ansible_distribution_major_version == '7'

# install basic stuff
- name: install rng-tools
  dnf:
    name: "{{ item }}"
    state: present
  with_items: [ rng-tools ]
  become: true
  when:
   - ansible_os_family == 'RedHat'
   - ansible_distribution_major_version == '8'

# install basic stuff
- name: install rng-tools
  dnf:
    name: "{{ item }}"
    state: present
  with_items: [ rng-tools ]
  become: true
  when:
   - ansible_os_family == 'RedHat'
   - ansible_distribution == 'Fedora'

- name: enable rngd
  tags: test3
  systemd:
   name: rngd.service
   enabled: yes
   state: started
  become: true
  when:
   - ansible_os_family == 'RedHat'

- name: install haveged
  apt:
    name: "{{ item }}"
    state: present
  with_items: [ haveged ]
  become: true
  when:
   - ansible_distribution == 'Ubuntu'

- name: timezone
  timezone:
    name: America/Detroit
  become: true

- name: get ephemeral hostname
  command: hostname
  check_mode: no
  register: ephemeral_hostname
  changed_when: no

- name: set ephemeral hostname
  command: nmcli g h {{inventory_hostname}}
  become: true
  when: inventory_hostname != ephemeral_hostname.stdout

#
#- name: set ephemeral hostname
#  command: hostname {{inventory_hostname}}
#  become: true
#  when: inventory_hostname != ephemeral_hostname.stdout
#
#- name: persist hostname
#  copy:
#    content: "{{ inventory_hostname }}\n"
#    dest: /etc/hostname
#    group: root
#    owner: root
#    mode: 0644
#  become: true
#  register: persist_out
#  changed_when: persist_out.changed
#  when: inventory_hostname != ephemeral_hostname.stdout

#
#- name: reportout
#  debug:
#   var: persist_out

- name: uname release
  tags: ur
  command: uname -a
  register: uname_release
  check_mode: no
  changed_when: false

- name: disable kdump for linode centos
  tags: ur
  service:
   name: kdump
   state: stopped
   enabled: no
  become: true
  when:
   - ansible_os_family == 'RedHat' and uname_release.stdout is search("linode")

- name: disable ssh with passwords
  tags: pw
  lineinfile:
   dest: /etc/ssh/sshd_config
   regexp: '#*PasswordAuthentication [yn]'
   line: 'PasswordAuthentication no'
  become: true
  register: ssh_with_passwords
  when:
   - disable_sshd_passwordauth is defined and disable_sshd_passwordauth

- name: disable root login
  tags: pw
  lineinfile:
   dest: /etc/ssh/sshd_config
   regexp: '#*PermitRootLogin [yn]'
   line: 'PermitRootLogin no'
  become: true
  register: root_login
  when:
   - disable_root_login is defined and disable_root_login

- name: restart sshd if config changed
  tags: pw
  service:
    name: "{{ 'sshd' if ansible_os_family == 'RedHat' else 'ssh' }}"
    state: restarted
  become: true
  when:
   - root_login.changed or ssh_with_passwords.changed
